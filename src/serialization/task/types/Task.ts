/**
 * This file auto-generated by Fern from our API Definition.
 */

import { CompanyApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const Task: core.schemas.ObjectSchema<Task.Raw, CompanyApi.Task> = core.schemas.object({
  id: core.schemas.lazy(async () => (await import("../..")).TaskId),
  name: core.schemas.string().optional(),
  status: core.schemas.lazy(async () => (await import("../..")).TaskStatus),
  request: core.schemas.lazyObject(async () => (await import("../..")).HttpRequest),
  scheduledFor: core.schemas.property("scheduled_for", core.schemas.date().optional()),
  createdAt: core.schemas.property("created_at", core.schemas.date()),
});

export declare namespace Task {
  interface Raw {
    id: serializers.TaskId.Raw;
    name?: string | null;
    status: serializers.TaskStatus.Raw;
    request: serializers.HttpRequest.Raw;
    scheduled_for?: string | null;
    created_at: string;
  }
}
